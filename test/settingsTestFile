# Any line starting with a # is assumed to be a comment

## TokenDefinitions
###################
# TokenDefinitions defines the tokens that are mapped to each number key on the keyboard
#
# Ordering of tokens (regex captures) is the same as the physical key layout on a keyboard: 2,3,4,5,6,7,8,9,0
# Key 1 is reserved for Line number
#############################################################################################################

TokenDefinitions
 # Key:Name,     Width,   Visible    Alignment      Crop
    
     1:Line,         5,        1,       right,      left
     2:Time,        12,        1,        left,      left
     3:TimeDiff,    12,        0,        left,      left
     4:Card,         3,        0,        left,      left
     5:TraceLevel,   6,        0,        left,      left
     6:CpuId,        2,        0,        left,      left
     7:FileAndLine, 20,        0,        left,      left
     8:Process,     10,        1,        left,     right
     9:TraceObj,    10,        1,        left,     right
     0:Msg,        200,        1,        left,      left

/TokenDefinitions

## Regex expressions for tokens in a log line
#############################################
# The first matcher has to be named "prefix" and is specially treated; it will be matched against the start of each line and 
# consumes its part of the line, if it fails to match, the line is considered to be of an incorrect format for the matcher.
# If there are more than 1 LogLineTOkenizers defined in this file the next one will be applied to the line.
#
# If the prefix matcher matches the line the rest of the matchers will be matched against the rest of the line (the part after 
# prefix) and are assumed to be optional for the line.
#
# The captures from the matchers are supposed to match the order of the token definitions.
#
# More LogLineTokenizer entries can be added.
#####################################################################################################################

LogLineTokenizer:LttngBase

 # 5 captures: Time, TimeDiff, Card, TraceLevel and CpuId
 prefix<5>=\[\d{4}-\d{2}-\d{2}\s*(\d{1,2}:\d{1,2}:\d{1,2}\.\d{3}).*?\]\s*\((\+\d+\.\d+)\)\s*(\w+)\s*\w+:(\w+):\s*{ cpu_id = (\w+) },

 # 2 captures, mapped to one token: FileAndLine with separator ":"
 fileAndLine<2,:>=fileAndLine = ".*?(\w+\.\w+):(\d+)",

 # 1 capture, Process
 process<1>=\{ processAndObjIf = "(.*?)\(.*?\)",

 # 1 capture, TraceObj
 traceObj<1>=\{ processAndObjIf = ".*?\((.*?)\)",

 # 1 capture: Msg
 msg<1>=msg = "\s*(.*)" }

/LogLineTokenizer
